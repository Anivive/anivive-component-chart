{{- if .Values.cronJobs}}
  {{- range $cronJobsIndex, $cronJob := $.Values.cronJobs }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "{{ $cronJob.name }}"
  labels:
    "app.kubernetes.io/name": "devspace-app"
    "app.kubernetes.io/component": {{ $.Release.Name | quote }}
    "app.kubernetes.io/managed-by": {{ $.Release.Service | quote }}
    {{- range $labelName, $labelValue := $cronJob.labels }}
    {{ $labelName | quote }}: {{ $labelValue | quote }}
    {{- end }}
  annotations:
    "helm.sh/chart": "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
    {{- range $annotationName, $annotationValue := $cronJob.annotations }}
    {{ $annotationName | quote }}: {{ $annotationValue | quote }}
    {{- end }}
spec:
  schedule: {{ $cronJob.schedule | quote }}
  jobTemplate:
    spec:
      template:
        metadata:
          name: "{{ $cronJob.name }}"
          labels:
            "app.kubernetes.io/name": "devspace-app"
            "app.kubernetes.io/component": {{ $.Release.Name | quote }}
            "app.kubernetes.io/managed-by": {{ $.Release.Service | quote }}
            {{- range $labelName, $labelValue := $cronJob.labels }}
            {{ $labelName | quote }}: {{ $labelValue | quote }}
            {{- end }}
          annotations:
            "helm.sh/chart": "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
            {{- range $annotationName, $annotationValue := $cronJob.annotations }}
            {{ $annotationName | quote }}: {{ $annotationValue | quote }}
            {{- end }}
        spec:
          serviceAccountName: {{ if $.Values.serviceAccount }}{{ if kindIs "map" $.Values.serviceAccount }}{{ $.Values.serviceAccount.name }}{{ else }}{{ $.Values.serviceAccount }}{{ end }}{{ else }}default{{ end }}
          restartPolicy: {{ $cronJob.restartPolicy | default "Never" | quote }}
          {{- if $cronJob.initContainers }}
          initContainers:
            {{- range $containerIndex, $initContainer := $cronJob.initContainers }}
            - name: {{ $initContainer.name }}
              image: {{ $initContainer.image | quote }}
              {{- if $initContainer.imagePullPolicy}}
              imagePullPolicy: {{ $initContainer.imagePullPolicy }}
              {{- end }}
              restartPolicy: {{ $initContainer.restartPolicy | default "Never" }}
              {{- if $initContainer.workingDir }}
              workingDir: {{ $initContainer.workingDir }}
              {{- end }}
              {{- if $initContainer.command }}
              command: {{- toYaml $initContainer.command | nindent 14 }}
              {{- end }}
              {{- if $initContainer.args }}
              args: {{- toYaml $initContainer.args | nindent 14 }}
              {{- end }}
              {{- if $initContainer.env }}
              env: {{- toYaml $initContainer.env | nindent 14 }}
              {{- end }}
              {{- if $initContainer.envFrom }}
              envFrom: {{- toYaml $initContainer.envFrom | nindent 14 }}
              {{- end }}
              {{- if $initContainer.volumeMounts }}
              volumeMounts:
                {{- range $volumeMountIndex, $volumeMount := $initContainer.volumeMounts }}
                - mountPath: {{ $volumeMount.containerPath | quote }}
                  name: {{ $volumeMount.volume.name | quote }}
                  {{- if $volumeMount.volume.subPath }}
                  subPath: {{ trimAll "/" $volumeMount.volume.subPath | default "" | quote }}
                  {{- end }}
                  readOnly: {{ $volumeMount.volume.readOnly | default false }}
                {{- end }}
              {{- end }}
              {{- if $initContainer.resources }}
              resources: {{- toYaml $initContainer.resources | nindent 14 }}
              {{- else }}
              resources:
                limits:
                  cpu: 400m
                  memory: 250Mi
                requests:
                  cpu: 10m
                  memory: 50Mi
              {{- end }}
            {{- end }}
          {{- end }}
          containers:
            - name: {{ $cronJob.name }}
        {{- if $cronJob.image }}
              image: {{ $cronJob.image | quote }}
        {{- else }}
        {{- with index $.Values.containers 0 }}
              image: {{ .image | quote }}
        {{- end }}
        {{- end }}
              command: {{- toYaml $cronJob.command | nindent 16 }}
              args: {{- toYaml $cronJob.args | nindent 16 }}
        {{- if $cronJob.env }}
              env: {{- toYaml $cronJob.env | nindent 16 }}
        {{- end }}
        {{- if $cronJob.envFrom }}
              envFrom: {{- toYaml $cronJob.envFrom | nindent 16 }}
        {{- end }}
              securityContext: {{ toYaml $.Values.securityContext }}
              volumeMounts:
                {{- range $volumeMountIndex, $volumeMount := $cronJob.volumeMounts }}
                - mountPath: {{ $volumeMount.containerPath | quote }}
                  name: {{ $volumeMount.volume.name | quote }}
                  {{- if $volumeMount.volume.subPath }}
                  subPath: {{ trimAll "/" $volumeMount.volume.subPath | default "" | quote }}
                  {{- end }}
                  readOnly: {{ $volumeMount.volume.readOnly | default false }}
                {{- end }}
              {{- if $cronJob.resources }}
              resources:
                {{- with $cronJob.resources.limits }}
                limits:
                  {{- if .cpu }}
                  cpu: {{ .cpu | quote }}
                  {{- end }}
                  {{- if .memory }}
                  memory: {{ .memory | quote }}
                  {{- end }}
                  {{- if .ephemeralStorage }}
                  ephemeral-storage: {{ .ephemeralStorage | quote }}
                  {{- end }}
                {{- end }}
                {{- if $cronJob.resources.requests }}
                {{- with $cronJob.resources.requests }}
                requests:
                  {{- if .cpu }}
                  cpu: {{ .cpu | quote }}
                  {{- else }}
                  {{- if $cronJob.resources.limits }}
                  {{- if $cronJob.resources.limits.cpu }}
                  cpu: "0"
                  {{- end }}
                  {{- end }}
                  {{- end }}
                  {{- if .memory }}
                  memory: {{ .memory | quote }}
                  {{- else }}
                  {{- if $cronJob.resources.limits }}
                  {{- if $cronJob.resources.limits.memory }}
                  memory: "0"
                  {{- end }}
                  {{- end }}
                  {{- end }}
                  {{- if .ephemeralStorage }}
                  ephemeral-storage: {{ .ephemeralStorage | quote }}
                  {{- else }}
                  {{- if $cronJob.resources.limits }}
                  {{- if $cronJob.resources.limits.ephemeralStorage }}
                  ephemeral-storage: "0"
                  {{- end }}
                  {{- end }}
                  {{- end }}
                {{- end }}
                {{- else }}
                {{- if $cronJob.resources.limits }}
                requests:
                  {{- if $cronJob.resources.limits.cpu }}
                  cpu: "10m"
                  {{- end }}
                  {{- if $cronJob.resources.limits.memory }}
                  memory: "50mi"
                  {{- end }}
                  {{- if $cronJob.resources.limits.ephemeralStorage }}
                  ephemeral-storage: "0"
                  {{- end }}
                {{- end }}
                {{- end }}
              {{else}}
              resources:
                limits:
                  cpu: 400m
                  memory: 250Mi
                requests:
                  cpu: 10m
                  memory: 50Mi
              {{- end }}
          volumes:
            {{- range $volumeIndex, $volume := $.Values.volumes }}
            {{- $isVolumeOfThisComponent := false }}
            {{- range $cronJobIndex, $cronJob := $.Values.cronJobs }}
              {{- range $volumeMountIndex, $volumeMount := $cronJob.volumeMounts }}
                {{- if or $volumeMount.volume.readOnly $volumeMount.volume.shared $volume.secret $volume.configMap $volume.hostPath (hasKey $volume "emptyDir") }}
                  {{- if eq $volume.name $volumeMount.volume.name }}
                    {{- $isVolumeOfThisComponent = true }}
                  {{- end }}
                {{- end }}
              {{- end }}
            {{- end }}
            {{- if $isVolumeOfThisComponent }}
            - name: {{ $volume.name | quote }}
              {{- if $volume.secret }}
              secret:
                {{ toYaml $volume.secret | indent 12 }}
              {{- else }}
              {{- if $volume.configMap }}
              configMap:
                {{ toYaml $volume.configMap | indent 12 }}
              {{- else }}
              {{- if $volume.hostPath }}
              hostPath:
                {{ toYaml $volume.hostPath | indent 12 }}
              {{- else }}
              {{- if hasKey $volume "emptyDir" }}
              emptyDir:
                {{ toYaml $volume.emptyDir | indent 12 }}
              {{- else }}
              persistentVolumeClaim:
                claimName: {{ $volume.name | quote }}
              {{- end }}
              {{- end }}
              {{- end }}
              {{- end }}
            {{- end }}
            {{- end }}
{{- if $cronJob.ttlSecondsAfterFinished }}
      ttlSecondsAfterFinished: {{ $cronJob.ttlSecondsAfterFinished }}
{{- end }}
---
      {{- end }}
      {{- end }}
